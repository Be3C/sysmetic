plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.be3c'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

ext {
	awsSdkVersion = '2.27.21'
	apachePoiVersion = '5.3.0'
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Web
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Spring Data
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	runtimeOnly 'com.mysql:mysql-connector-j'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'           // 추가
	testAnnotationProcessor 'org.projectlombok:lombok'   // 추가

	// MapStruct
	implementation 'org.mapstruct:mapstruct:1.5.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'

	// MapStruct
	implementation 'org.mapstruct:mapstruct:1.5.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'

	// DevTools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Mail
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// Spring Cloud for AWS
	implementation 'io.awspring.cloud:spring-cloud-aws-starter:3.2.1'

	// AWS
	implementation platform("software.amazon.awssdk:bom:${awsSdkVersion}")
	implementation 'software.amazon.awssdk:s3'

	implementation 'software.amazon.awssdk:apache-client'

	implementation 'software.amazon.awssdk:sso'
	implementation 'software.amazon.awssdk:ssooidc'

	// Apache POI - exel
	implementation "org.apache.poi:poi:${apachePoiVersion}"
	implementation "org.apache.poi:poi-ooxml:${apachePoiVersion}"

	// Thumbnailator
	implementation 'net.coobird:thumbnailator:0.4.16'

	// jjwt (241105 추가)
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6' // API 의존성
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.6' // 구현체 의존성
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.6' // Jackson 사용 시 필요

	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// Swagger
	implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.2.0'

	// https://mvnrepository.com/artifact/org.apache.commons/commons-math3
	implementation 'org.apache.commons:commons-math3:3.6.1'

	//Querydsl 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// google analytics
	implementation 'com.google.analytics:google-analytics-data:0.64.0'
}

tasks.named('test') {
	useJUnitPlatform()
}

clean {
	delete file('src/main/generated')
}